---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Ahren.
--- DateTime: 2023/08/28 18:39
--- 主动技能触发

---@class SkillAttack
local m = {

}

local luaConfig = LuaConfig

---重新加载脚本事件
function m.Init()
    luaConfig = LuaConfig
    
 end
 GameManager.ScriptLoadedEvent:addAction(m.Init)


---处理火雨伤害
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleFireRain(player, spirit, skill, skillDB)
    local damage = math.floor(player:GetAttr(emBaseAttr.MaxMC) * 0.1)
    return damage, 0, true
end

---处理流星雨伤害
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleMeteoricShower(player, spirit, skill, skillDB)
    local damage = math.floor(player:GetAttr(emBaseAttr.MaxMC) * 0.18)
    return damage, 0, true
end

---处理暴风雪伤害
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleBlizzard(player, spirit, skill, skillDB)
    local damage = math.floor(player:GetAttr(emBaseAttr.MaxMC) * 0.1)
    return damage, 0, true
end

---处理冰河伤害
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleIceDriver(player, spirit, skill, skillDB)
    local damage = math.floor(player:GetAttr(emBaseAttr.MaxMC) * 0.25)
    return damage, 0, true
end

---处理冰封术伤害
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleWinterRestriction(player, spirit, skill, skillDB)
    local damage = skillDB.attribute2[skill:Level()]
    return damage, 0, true
end

---处理冰刺伤害
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleIceStinger(player, spirit, skill, skillDB)
    ---如果是玩家 给予减速buff
    if spirit:IsPlayer() then
        local otherPlayer = spirit:ToPlayer()
        local num = skillDB.attribute1[skill:Level()]
        local duration = skillDB.buff_duration[skill:Level()]
        otherPlayer:SetNumber("BUFF技能_冰刺", num, false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    local damage = skillDB.attribute2[skill:Level()]
    return damage, 0, true
end

---处理水之冷却
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleWaterReduce(player, spirit, skill, skillDB)
    local num = skillDB.attribute1[skill:Level()]
    ---如果是玩家 给予debuff
    if spirit:IsPlayer() then
        local otherPlayer = spirit:ToPlayer()
        local num = skillDB.attribute1[skill:Level()]
        local duration = skillDB.buff_duration[skill:Level()]
        otherPlayer:SetNumber("BUFF技能_水之冷却", num, false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 50, 0, true
end

---处理异态消除
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleCancelation(player, spirit, skill, skillDB)
    ---如果是玩家 消除玩家增益buff
    if spirit:IsPlayer() then
        local level = skill:Level()
        ---概率
        local num = skillDB.attribute1[level]
        if Random(100) > num then
            return 50, 0, true
        end
        local count = Random(skillDB.attribute2[level]) + 1
        local otherPlayer = spirit:ToPlayer()
        local buffs = otherPlayer:GetAllBuffs()
        for i = 1, #buffs, 1 do
            local buffId = buffs[i]
            local buffDB = luaConfig.buffConfig[buffId]
            if buffDB.is_debuff then
                goto continue
            end
            if count <= 0 then
                break
            end
            count = count - 1
            otherPlayer:RemoveBuffByIdx(buffId)
            ::continue::
        end

    end
    return 50, 0, true
end


local tabHailStorm = {25, 26, 27, 28, 49}
---处理冰雹风暴
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleHailStorm(player, spirit, skill, skillDB)
    local damage = skillDB.attribute2[skill:Level()]
    ---如果是玩家 判断是否追加buff
    if spirit:IsPlayer() then
        local num = skillDB.attribute1[skill:Level()]
        local otherPlayer = spirit:ToPlayer()
        local result = false
        for index, value in ipairs(tabHailStorm) do
            if otherPlayer:HasSkillBuff(value) then
                result = true
                break
            end
        end
        ---如果有减速或者移动buff 追加伤害
        if result then
            damage = damage + math.floor(damage * num / 100)
        end
    end
    return damage, 0, true
end

---处理致盲术
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleBlindMaker(player, spirit, skill, skillDB)
    if spirit:IsPlayer() then
        local duration = skillDB.attribute1[skill:Level()]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 500, 0, true
end


---处理毒箭术
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandlePoisonArrow(player, spirit, skill, skillDB)
   
    if spirit:IsPlayer() then
        local num = skillDB.attribute2[skill:Level()]
        local duration = skillDB.attribute1[skill:Level()]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:SetNumber("BUFF技能_毒箭术", num, false)
        otherPlayer:SetNumber("BUFF技能_毒箭术_施法者", player:Id(), false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 500, 0, true
end

---处理剑刃风暴
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleScatterShot(player, spirit, skill, skillDB)
    local damage = skillDB.attribute1[skill:Level()]
    return damage, 0, true
end

---处理束缚之箭
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleRestraintShot(player, spirit, skill, skillDB)
    if spirit:IsPlayer() then
        local duration = skillDB.attribute1[skill:Level()]
        local num = skillDB.attribute2[skill:Level()]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:SetNumber("BUFF技能_束缚之箭", num, false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 500, 0, true
end

---处理死亡之触
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleDeathHand(player, spirit, skill, skillDB)
    if spirit:IsPlayer() then
        local duration = skillDB.buff_duration[skill:Level()]
        local num = skillDB.attribute1[skill:Level()]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:SetNumber("BUFF技能_死亡之触", num, false)
        otherPlayer:SetNumber("BUFF技能_死亡之触_施法者", player:Id(), false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 4000, 0, true
end

---处理致命攻击
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandlePatalBlow(player, spirit, skill, skillDB)

    local duration = skillDB.buff_duration[skill:Level()]
    local damage = skillDB.attribute1[skill:Level()]
    local num = skillDB.attribute2[skill:Level()]
    player:SetNumber("BUFF技能_致命攻击", num, false)
    player:AddBuffByName_US(skillDB.english_name, duration, false)
    return damage, 0, true
end

---处理死亡时刻
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleDeathTime(player, spirit, skill, skillDB)
    local damage = skillDB.attribute1[skill:Level()]
    return damage, 0, true
end

---处理区域狂暴
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleWideFury(player, spirit, skill, skillDB)
    local damage = skillDB.attribute1[skill:Level()]
    return damage, 0, true
end

---处理燃烧爆裂
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleBurnScald(player, spirit, skill, skillDB)
    if spirit:IsPlayer() then
        local level = skill:Level()
        local duration = skillDB.buff_duration[level]
        local num1 = skillDB.attribute1[level]
        local num2 = skillDB.attribute2[level]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:SetNumber("BUFF技能_燃烧爆裂_减少魔法防御", num1, false)
        otherPlayer:SetNumber("BUFF技能_燃烧爆裂_每秒扣除蓝量", num2, false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 500, 0, true
end

---处理爆炸火焰
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleExplosion(player, spirit, skill, skillDB)
    local damage = player:GetAttr(emBaseAttr.MaxMC) + skillDB.attribute1[skill:Level()]
    return damage, 0, true
end

---处理地狱烈焰
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleAcheronFlame(player, spirit, skill, skillDB)
    local damage = skillDB.attribute1[skill:Level()]
    return damage, 0, true
end

---处理沉默之火
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleSilent(player, spirit, skill, skillDB)
    if spirit:IsPlayer() then
        local level = skill:Level()
        local duration = skillDB.buff_duration[level]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 500, 0, true
end

---处理战嚎
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleBattleCry(player, spirit, skill, skillDB)
    if spirit:IsPlayer() then
        local level = skill:Level()
        local duration = skillDB.buff_duration[level]
        local num = skillDB.attribute1[level]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:SetNumber("BUFF技能_战嚎", num, false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 0, 0, true
end

---处理突击暗杀
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleAssault(player, spirit, skill, skillDB)
    local damage = skillDB.attribute1[skill:Level()]
    return damage, 0, true
end

---处理剑刃风暴
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleBladeStorm(player, spirit, skill, skillDB)
    local level = skill:Level()
    local damage = skillDB.attribute1[skill:Level()]
    if spirit:IsPlayer() then
        local duration = skillDB.buff_duration[level]
        local num = skillDB.attribute2[level]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:SetNumber("BUFF技能_剑刃风暴", num, false)
        otherPlayer:SetNumber("BUFF技能_剑刃风暴_释放者", player:Id(), false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return damage, 0, true
end

---处理噩梦降临
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
local function HandleNightmare(player, spirit, skill, skillDB)
    if spirit:IsPlayer() then
        local level = skill:Level()
        local duration = skillDB.buff_duration[level]
        local num1 = skillDB.attribute1[level]
        local num2 = skillDB.attribute2[level]
        local otherPlayer = spirit:ToPlayer()
        otherPlayer:SetNumber("BUFF技能_噩梦降临_攻速减少", num1, false)
        otherPlayer:SetNumber("BUFF技能_噩梦降临_防御减少", num2, false)
        otherPlayer:AddBuffByName_US(skillDB.english_name, duration, false)
    end
    return 500, 0, true
end

 m.mapSkillAttack = {
    ["WinterRestriction"] = HandleWinterRestriction,
    ["IceStinger"] = HandleIceStinger,
    ["IceDriver"] = HandleIceDriver,
    ["WaterReduce"] = HandleWaterReduce,
    ["Cancelation"] = HandleCancelation,
    ["HailStorm"] = HandleHailStorm,
    ["BlindMaker"] = HandleBlindMaker,
    ["PoisonArrow"] = HandlePoisonArrow,
    ["ScatterShot"] = HandleScatterShot,
    ["RestraintShot"] = HandleRestraintShot,
    ["DeathHand"] = HandleDeathHand,
    ["PatalBlow"] = HandlePatalBlow,
    ["DeathTime"] = HandleDeathTime,
    ["WideFury"] = HandleWideFury,
    ["BurnScald"] = HandleBurnScald,
    ["Explosion"] = HandleExplosion,
    ["AcheronFlame"] = HandleAcheronFlame,
    ["Silent"] = HandleSilent,
    ["BattleCry"] = HandleBattleCry,
    ["Assault"] = HandleAssault,
    ["BladeStorm"] = HandleBladeStorm,
    ["Nightmare"] = HandleNightmare,
    ["FireRain"] = HandleFireRain,
    ["MeteoricShower"] = HandleMeteoricShower,
    ["Blizzard"] = HandleBlizzard,

 }

---玩家使用技能攻击
---@param player Player 发起攻击的玩家
---@param spirit Spirit 被攻击的对象基类
---@param skill Skill 使用的技能
---@param skillDB kx_skill_data 使用的技能配置
---@return number, number, boolean 基础伤害数值，真实伤害数值，是否必中
function m.HandlePlayerAttack(player, spirit, skill, skillDB)
    return m.mapSkillAttack[skillDB.english_name](player, spirit, skill, skillDB)
end

















SkillAttack = m
return m